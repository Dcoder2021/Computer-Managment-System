<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="bunifuTextBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAVcAAAA2CAYAAABz7tpTAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAEnQAABJ0Ad5mH3gAAASMSURBVHhe7d0/TBt3GMZxxo4ZMzJmzNixY8YslbpUyshS
        KZE6tBtDu1XqlqFbpwyZkTIFfD4fFiAHZMk1tuCEXMtyjWMO4gCxLPd9nBeBy5/gA6cEvh/pHZC5P9Oj
        1z//7r0pAMANNj8/P201YzUbhuHLXC73RrWwsDCgKIq6aXWUUVZzyi2rn6weeKT9v+xGHmYymV8sTDft
        BvfK5XI3juNBo9EYdDqdYQHATXSUUc1mc6Dc2tjY6EVRlGSz2brVc+WbR93nYxedtjB9nc/ndzY3N3t7
        e3t+uwDwZet2u4NarTZQvqmz/Swhaxe5Zxf7w9K902q1/FYA4HZSZ6uQ1VKn5d99j8LrpfS2YP1na2ur
        1+/3/dIAcPtpqdPybzubzX7rkXg9giD43tJ7+/Dw0C8FAHdLr9cbrK6uti1gf/ZovBprh38rFotv6VYB
        YDBYX19Poih6Zd/mv/KYHJ+d4HmlUtnxcwIATL1e/2D5mPGoHI+WAtSx+rkAACfEcbyrBtQj83Ks3f16
        eXm5xVIAAJxPDagaUY/Oi2m7gaVxgx+vAOBiakD1Y792U3mEnk/7WLXdyo8FAFwgSZJBGIZ/eYSeTemr
        FGY5AAAub21tbcfy87FH6WnWtb7mySsAGI9GAGjGikfpKP2ItbS0xKQVAEjh3O7VUvf3OI5ZawWAFDRd
        y779z3mkHtOYLU2DAQCMT4/HBkGwa93r8ZNb9seDKIoS/x8AQAqFQqFjefrIo3UYrk+r1eqBfw4ASEFz
        YDVo26N1uN76Z71e948BAGm0222tuy56tLIFCwCuw6ktWXq6QE8ZAADS09iAIAgSj9bhToHW/v6+fwwA
        SEtvlvVonZrSHwCAqyNcAWACCFcAmADCFQAmgHAFgAkgXAFgAkbCVfuyeK0LAFzdSLjqiQI9WQAASE+T
        sTKZzHuP1uHjr4t6JhYAkJ7Gtmp8q0frsHN92Wg0/GMAQBqdTkeDW954tA5HDs7GcewfAwDSUJOqZtWj
        dRiu36ysrPD+LAC4glKptGd5+sSj9SMtwmoxFgCQThAEBxau9zxWP2LdFQDSO7XeesTS9rFeDev/BwAY
        Q7lc7lqOznikjmK/KwCMTw9hZbPZtoXr8ZtfT6J7BYDxVSqVd5lM5keP0rPxPi0AuLxPdq1H7B8e5vP5
        7X6/74cCAM6jb/v61u8RerEwDJ+VSiX2vQLABWq12vsoil54dF6ODtCBfg4AwAnaemU5ufzJ5YD/0gE6
        kIEuADBKb8vO5XJ/W06OPjBwWTrQArbYaDQ++DkB4E5LkuQoWKc9KtPxDvZVpVJhixaAO83XWIupO9az
        WFL/WigUOppXCAB3ibZbFYvFxIL1hRpOj8XrYyd9pEGw5XJ5l9fCALjtNMyqWq2+832s33kUTk4QBD/o
        YnbRA/1iBgC3icYAKN/CMOxY1s1OpFs9jy5m9VRTYDRmS3MMm83mcHuCfkkDgC+BvoUrt7QzSsNXLEy7
        mrOifLO6vrXVNHQDVk8saOcUtnZzLb0BkaIo6qaX3n6t3LJatBybsbrv0QYAuFmmpv4FacM5fKHxFegA
        AAAASUVORK5CYII=
</value>
  </data>
</root>